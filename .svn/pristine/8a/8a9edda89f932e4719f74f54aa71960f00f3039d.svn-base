using CdplATS.Entity.Models;
using CdplATS.UI.Helpers;
using Microsoft.AspNetCore.Mvc;

namespace CdplATS.UI.Controllers
{
    public class EmployeeFile : Controller
    {
        private readonly WebApiHelper _webApiHelper;
        private readonly CommonService _common;


        private readonly ApiHelper _apiHelper = new ApiHelper();

        public EmployeeFile(WebApiHelper webApiHelper, CommonService common)
        {
            _webApiHelper = webApiHelper;
            _common = common;

        }

        public IActionResult Index()
        {
            return View();
        }

        [HttpGet]
        public async Task<IActionResult> SendFileInMail()
        {
            var response = await _webApiHelper.GetAsync<IEnumerable<EmployeeFileEntity>>(_apiHelper.GetEmployeeInfoApi);

            var employeeList = response.Data;

            var fileDirectory = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "EmployeeFiles");

            try
            {
                foreach (var employee in employeeList)
                {
                    var fileName = employee.FileName;

                    var filePath = Path.Combine(fileDirectory, fileName);
                    if (!System.IO.File.Exists(filePath))
                    {
                        fileName = employee.FileName.Replace("FORM16", "PARTB");
                        filePath = Path.Combine(fileDirectory, fileName);
                    }
                    if (System.IO.File.Exists(filePath))
                    {
                        var fileBytes = await System.IO.File.ReadAllBytesAsync(filePath);

                        var emailEntity = new EmailEntity
                        {
                            Email = employee.Email,
                            Subject = "FORM16 2025-26 - " +  employee.EmployeeName ,
                            Body = $"Dear {employee.EmployeeName},<br><br>Please find FORM16 attached here with.<br><br>Regards,<br>CDPL Management",
                            AttachmentBytes = fileBytes,
                            AttachmentFileName = fileName
                        };

                        var result = await _common.SendAttachmentEmail(emailEntity);

                    }

                }
                return Json(new { success = true, message = "Emails sent successfully." });
            }
            catch (Exception ex)
            {
                return Json(new { success = false, message = "An error occurred while sending emails: " + ex.Message });

            }
        }
    }
}
