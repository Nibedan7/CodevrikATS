using CdplATS.API.Services;
using CdplATS.Entity.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Http.HttpResults;
using Microsoft.AspNetCore.Mvc;
using System.Net.Http;

namespace CdplATS.API.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class LeaveApiController : ControllerBase
    {
        private readonly LeaveService _leaveService;
        private object httpContext;

        public LeaveApiController(LeaveService leaveService)
        {
            _leaveService = leaveService;
        }


        /// <summary>
        /// Get all Leave of a User
        /// </summary>
        [HttpGet("getAllLeaveByUserId/{EmpCode}/{Status}")]
        public async Task<IActionResult> GetAllLeaveByUserId(int EmpCode, int Status)
        {
            var response = await _leaveService.GetAllLeaveByEmpCodeAsync(EmpCode, Status, "0");
            return Ok(response);
        }

        /// <summary>
        /// Get Leave by LeaveId
        /// </summary>
        /// 
        [HttpGet("getLeaveByGroupId/{Id}")]
        public async Task<IActionResult> GetLeaveByLeaveId(string Id)
        {
            var response = await _leaveService.GetAllLeaveByEmpCodeAsync(null, null, Id);
            return Ok(response);
        }

        /// <summary>
        /// Add / Edit Leave
        /// </summary>  
        ///

        [HttpPost("addEditLeave")]
        public async Task<IActionResult> AddEditLeave([FromBody] LeaveEntity leaveEntity)
        {
            var response = await _leaveService.AddEditLeaveAsync(leaveEntity);
            return Ok(response);
        }

        /// <summary>
        /// delete Leave
        /// </summary>  
        ///

        [HttpDelete("deleteLeave/{groupId}")]
        public async Task<IActionResult> DeleteLeave(string groupId)
        {
            var response = await _leaveService.DeleteLeaveAsync(groupId);
            return Ok(response);
        }


        /// <summary>
        /// approve&Reject Leave
        /// </summary>  
        ///

        [HttpDelete("approveRejectLeave/{groupId}/{status}/{empCode}")]
        public async Task<IActionResult> ApproveRejectLeave(string groupId, int status, int empCode)
        {
            var response = await _leaveService.ApproveRejectLeaveAsync(groupId, status, empCode);
            return Ok(response);
        }
    }
}
