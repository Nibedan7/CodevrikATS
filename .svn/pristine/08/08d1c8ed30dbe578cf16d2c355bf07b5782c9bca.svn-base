using System.Diagnostics;
using System.Xml.Linq;
using CdplATS.Entity.Models;
using CdplATS.UI.Helpers;
using Microsoft.AspNetCore.Mvc;

namespace CdplATS.UI.Controllers
{
    public class HolidayController : Controller
    {
        private readonly WebApiHelper _webApiHelper;
        private readonly ApiHelper _apiHelper = new ApiHelper();
        public HolidayController(WebApiHelper webApiHelper)
        {
            _webApiHelper = webApiHelper;
        }

        public IActionResult Index()
        {
            return View();
        }
        // For showing all the Listed Holiday
        public async Task<IActionResult> GetHoliday()
        {
            var holidays = await _webApiHelper.GetAsync<List<HoliDayEntity>>(_apiHelper.GetAllHolidayApi);
            return Json(holidays.Data);
        }

        // For Adding and Editing  Holiday
        public async Task<IActionResult>AddEditHoliday(int Id)
        {
            HoliDayEntity holidays = new HoliDayEntity();
             
            if (Id == 0)
            {
                return PartialView("/Views/Holiday/AddEditHoliday.cshtml", holidays);
            }

            var holiday = await _webApiHelper.GetAsync<HoliDayEntity>(_apiHelper.GetAllHolidayApi+$"?Id={Id}");

            if (holiday == null)
            {
                return NotFound("Holiday not found.");
            }

            return PartialView("/Views/Holiday/AddEditHoliday.cshtml", holiday.Data);

        }

        // For Save Holiday
        [HttpPost]
        public async Task<IActionResult> AddEditHoliday( HoliDayEntity request)
        {
            if (request == null)
            {
                return BadRequest("Invalid data.");
            }

            if (ModelState.IsValid)
            {
                var response = await _webApiHelper.PostAsync<HoliDayEntity>(_apiHelper.AddEditHolidayApi, request);

                return Json(response.Message);
            }


            return RedirectToAction("Index");
        }


        //For Deleting  Holiday
        [HttpDelete]
        public async Task<IActionResult> DeleteHoliday(int Id)
        {
            if (Id <=0)
            {
                return BadRequest("Invalid Holiday Id");
            }
            var response = await _webApiHelper.DeleteAsync<bool>(_apiHelper.DeleteHolidayApi+$"{Id}");

            if(response == null || !response.Success)
            {
                return Json(response?.Message);
            }
            return Json(response.Message);
        }


    }
}