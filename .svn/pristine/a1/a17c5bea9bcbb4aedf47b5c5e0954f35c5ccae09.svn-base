@using CdplATS.Entity.Models
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model PunchEntity

@{
    Layout = "_Layout";
}

@using CdplATS.Entity.Models
<!-- Breadcrumb -->
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item standardColor"><a href="#" class="standardColor">Punch</a></li>
        <li class="breadcrumb-item active standardColor" aria-current="page"><i class="fa-solid fa-fingerprint"></i> Punch Details</li>
    </ol>
</nav>

<div class="container-fluid">
    <!-- Table Header with Add Button -->

    <div class="d-flex align-items-center mb-3 filterBar">
        <div class="d-flex gap-2">
            <div style="padding-top:8px;">
                <label class="standardColor" style="width:max-content;">Employee Name: </label>
            </div>

            @Html.DropDownListFor(
                     model => model.SelectedEmployeeCode,
                     new SelectList(Model.EmployeeHierarchyList, "EmpCode", "EmpName", Model.SelectedEmployeeCode),
                     new { @class = "form-select-lg h-25 select2", id = "empDropdown", onchange = "bindPunchGrid()" }
            )

            <!-- Date Inputs for Start Date and End Date -->
            <div style="padding-top:8px; margin-left:20px;">
                <label class="standardColor" style="width:max-content;">Start Date: </label>
            </div>
            <input type="date" id="startDate" class="form-control" style="font-size: 12px !important;" />
            <div style="padding-top:8px; margin-left:20px;">
                <label class="standardColor" style="width:max-content;">End Date: </label>
            </div>
            <input type="date" id="endDate" class="form-control" style="font-size: 12px !important;" />

            <!-- Search Button -->

            <div style="margin-right:auto;">
                <button type="button" class="btn btnStdColor addEdit-Leave-btn" style="gap: .6rem !important; font-size: 12px !important;" onclick="bindPunchGrid()">
                    <i class="fa-solid fa-magnifying-glass"></i> Search
                </button>
            </div>
        </div>
        <span id="errmessage"  class="text-danger ms-3"></span>

    </div>

    <div class="table-container">
        <table id="punchTable" class="table table-bordered table-striped table-hover">
            <thead>
                <tr>
                    <th hidden> Id</th>
                    <th>Employee Name</th>
                    <th>Punch Date</th>
                    <th>First Punch</th>
                    <th>Last Punch</th>
                    <th>All Punch</th>
                    <th>Total Time(Minute)</th>
                    <th>Hour</th>
                    <th>Minute</th>
                    <th>Pending Time(Minute)</th>
                    <th>Credit Time(Minute)</th>
                    <th>Leave Status</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<script>

    $(document).ready(function () {
        bindPunchGrid();

         try {
            $('.select2').select2({
                width: 'auto',
                dropdownAutoWidth: true,
                minimumResultsForSearch: 5
            });
        } catch(e) {
            
        }

        $("#startDate").change(function () {
            var startDate = $(this).val();

            $("#endDate").attr("min", startDate);

            var endDate = $("#endDate").val();
            if (endDate && endDate < startDate) {
                $("#endDate").val("");  
                
            }
            
        });

    });

    function bindPunchGrid() {
  
        let empCode = $("#empDropdown").val();
        let startDate = $('#startDate').val() || ''
        let endDate = $('#endDate').val() || ''

        let errMessageDiv = document.getElementById('errmessage');
        if (endDate && !startDate) {
            errMessageDiv.textContent = 'Start date is required';
        }else {
                errMessageDiv.textContent = '';
        }

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetPunchDetails", "Punch")',
            dataType: "json",
            data: { empCode: empCode, StartDate: startDate, EndDate:  endDate},
            success: function (data) {
                PunchSuccHandler(data);
            },
        
            error: function (xhr, status, error,data) {
              
                PunchErrHandler(xhr, status, error);

            }
        }); 
    }


    function PunchErrHandler(xhr, status, error) {
    }

    function PunchSuccHandler(data) {
        try {
            var dataTableExample = $('#punchTable').DataTable();

            if (typeof dataTableExample !== 'undefined') {
                dataTableExample.destroy();
            }

            $('#punchTable').DataTable({
                scrollY: false,
                "order": [],
                "lengthMenu": [50, 100, 150, 200],
                "dom": 'frtlip',
                "bFilter": true,
                "aaData": data,
                "language": {
                    "lengthMenu": "Show _MENU_ entries,"
                },
                "aoColumns": [
                    { 
                        "mData": "id",
                        "visible": false
                    },
                    { 
                        "sWidth":"7%",
                        "mData": "employeeName",
                        "className": "dt-left"
                    },
                    {
                        "sWidth":"7%",
                        "mData": "punchDate",
                        "render": function (data, type, row, meta) {
                            if (!data) return '';
                            const date = new Date(data);
                            if (type === 'display' || type === 'filter') {
                                return date.toLocaleDateString('en-GB');
                            }
                            return date.getTime();
                        }
                    },
                    { 
                        "sWidth":"5%",
                        "mData": "firstPunch",
                        "className": "dt-left",
                        "render": function (data) {
                            return data;
                        }
                    },
                    { 
                        "sWidth":"5%",
                        "mData": "lastPunch",
                        "className": "dt-left"
                    },
                    {
                        "sWidth":"20%",
                        "mData":"allPunch",
                        "className":"dt-left"
                    },
                    { 
                        "sWidth":"7%",
                        "mData": "totalTimeMinute",
                        "className": "dt-center"
                    },
                    { 
                        "sWidth":"3%",
                        "mData": "hour",
                        "className": "dt-center",
                        "render": function (data) {
                            return data == 0 ? "" : data;
                        }
                    },
                    { 
                        "sWidth":"3%",
                        "mData": "minute",
                        "className": "dt-center",
                        "render": function (data) {
                            return data == 0 ? "" : data;
                        }
                    },
                    { 
                        "sWidth":"7%",
                        "mData": "pendingTime",
                        "className": "dt-center",
                        "render": function (data) {
                            return data == 0 ? "" : data;
                        }
                    },
                    { 
                        "sWidth":"7%",
                        "mData": "creditTime",
                        "className": "dt-center",
                        "render": function (data) {
                            return data == 0 ? "" : data;
                        }
                    },
                    {
					   "sWidth":"7%",
                        "mData": "leaveStatus",
						"className": "dt-center",
						"render": function (data) {
							return data == 0 ? "" : data;
						}
                    }
                    
                ]
            });

            $(".dataTables_length").css('clear', 'none');
            $(".dataTables_length").css('margin-right', '20px');
            $(".dataTables_info").css('clear', 'none');
            $(".dataTables_info").css('padding', '0');

        } catch (err) {
            
        }
    }
</script>
