using CdplATS.API.Services;
using CdplATS.Entity.Models;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;

namespace CdplATS.API.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
   // [Authorize]
    public class AppraisalApiController : ControllerBase
    {
        private readonly AppraisalService _appraisalService;

        public AppraisalApiController(AppraisalService appraisalService)
        {
            this._appraisalService = appraisalService;
        }

        [HttpGet("getApprisal/{TabId}/{EmployeeCode}/{AssessmentId}")]
        public async Task<IActionResult> GetApprisal(int TabId, int EmployeeCode, int AssessmentId)
        {
            var response = await _appraisalService.GetaAppraisalAsync(TabId, EmployeeCode, AssessmentId);
            return Ok(response);
        }

        [HttpGet("BindApprisalEmployeesList/{EmployeeCode}")]
        public async Task<IActionResult> BindApprisalEmployeesList( int EmployeeCode)
        {
            var response = await _appraisalService.BindApprisalEmployeesList( EmployeeCode);
            return Ok(response);
        }

        [HttpGet("BindApprisalByEmployeeList/{EmployeeCode}/{LoggedEmpCode}")]
        public async Task<IActionResult> BindApprisalByEmployeeList(int EmployeeCode, int LoggedEmpCode)
        {
            var response = await _appraisalService.BindApprisalByEmployeeList(EmployeeCode, LoggedEmpCode);
            return Ok(response);
        }

        [HttpGet("GetTabAvarageByEmployee/{EmployeeCode}/{TabId}/{EmpAssessementId}")]
        public async Task<IActionResult> GetTabAvarageByEmployee(int EmployeeCode, int TabId, int EmpAssessementId)
        {
            var response = await _appraisalService.GetTabAvarageByEmployee(EmployeeCode, TabId, EmpAssessementId);
            return Ok(response);
        }

        [HttpPost("UpdateAssessment")]
        public async Task<IActionResult> UpdateAssessment([FromBody] AppraisalEntity appraisalEntity)
        {
            var response = await _appraisalService.UpdateAssessment(appraisalEntity);
            return Ok(response);
        }

    }
}
