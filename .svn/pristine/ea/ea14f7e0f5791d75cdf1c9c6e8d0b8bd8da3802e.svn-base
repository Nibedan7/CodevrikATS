using Microsoft.AspNetCore.Mvc;
using System.Reflection;
using CdplATS.Entity.Models;
using System.CodeDom;
using System.Text.Json;
using CdplATS.UI.Helpers;
using static CdplATS.Entity.Models.LeaveEntity;
using System.Reflection.Emit;
using DocumentFormat.OpenXml.Drawing.Charts;
using static Microsoft.AspNetCore.Razor.Language.TagHelperMetadata;
using DocumentFormat.OpenXml.Wordprocessing;

namespace CdplATS.UI.Controllers
{
    public class LeaveController : Controller
    {
        private readonly WebApiHelper _webApiHelper;
        private readonly ApiHelper _apiHelper = new ApiHelper();
        private readonly CommonService _commonService;

        public LeaveController(WebApiHelper webApiHelper, CommonService commonService)
        {
            _webApiHelper = webApiHelper;
            _commonService = commonService;
        }

        public async Task<IActionResult> Index()
        {
            var LoggedEmpCode = HttpContext.Session.GetInt32("authCode");
            var CurrYear = DateTime.Now.Year;

            var ParentWithChildEmp = await _webApiHelper.GetAsync<List<EmpDropDownList>>(_apiHelper.EmpDropDown +$"{LoggedEmpCode}");
            var LeaveYears = await _webApiHelper.GetAsync<List<int>>(_apiHelper.FestivalYearDropdown);

            var leaveModel = new LeaveEntity
            {
                EmployeeDropDownList = ParentWithChildEmp.Data,
                LogEmpCode = LoggedEmpCode,
                LeaveYears = LeaveYears.Data,
                CurrentYear = CurrYear,
            };
            return View(leaveModel);
        }

        // Get All leave of a Employee
        [HttpGet]
        public async Task<IActionResult> GetAllLeave(int empCode, int Status, int LeaveYear)
        {
            var leaves = await _webApiHelper.GetAsync<List<LeaveEntity>>(_apiHelper.GetLeaveByEmpCodeApi + $"{empCode}/{Status}/{LeaveYear}");
            return Json(leaves.Data);
        }

        //Add or Edit Leave
        [HttpGet]
        public async Task<IActionResult> AddEditLeave(string GroupId)
        {
            LeaveEntity leaveEntity= new LeaveEntity();
            if (GroupId != "0")
            {
                var leave = await _webApiHelper.GetAsync<List<LeaveEntity>>(_apiHelper.GetLeaveByGroupIdApi + $"{GroupId}");
                leaveEntity = leave.Data[0];
            }

            return PartialView("/Views/Leave/AddEditLeave.cshtml", leaveEntity);

        }

        // Save Leave
        [HttpPost]
        public async Task<IActionResult> SaveLeave(LeaveEntity leave)
        {
            if (ModelState.IsValid)
            {
                var empCode = HttpContext.Session.GetInt32("authCode");
                leave.EmpCode = empCode;
                var result = await _webApiHelper.PostAsync<dynamic>(_apiHelper.AddEditLeaveApi, leave);

                if (result.Success)
                {
                    var childWithParentsList = await _webApiHelper.GetAsync<List<ChildWithParentList>>(_apiHelper.ChildWithParents + $"{empCode}");
                    var emailList = string.Join(", ", childWithParentsList.Data.Select(e => e.Email));
                    var leaveEmployeeName = childWithParentsList.Data[0].EmployeeName;

                    string leaveTypeText = leave.LeaveType switch
                    {
                        1 => "Full Day",
                        2 => "First Half",
                        3 => "Second Half",
                        _ => "N/A"
                    };

                    string leaveType = leave.StartDate == leave.EndDate ? $"<b>Leave Type:</b>{leaveTypeText}" : " ";

                    var emailBody = $"<p>Dear Sir/Mam,</p>\r\n\r\n<p>\r\nI hope this message finds you well. I am writing to inform you that I have availed leave for the following duration:\r\n</p>\r\n\r\n<p>\r\n<b>Start Date:</b> {leave.StartDate?.ToString("dd/MM/yyyy")}<br />\r\n<b>End Date:</b> {leave.EndDate?.ToString("dd/MM/yyyy")}<br />\r\n{leaveType}<br />\r\n<b>Reason:</b> {leave.Reason}\r\n</p>\r\n\r\n<p>\r\nI wanted to ensure transparency and keep you informed well in advance. I've planned my work schedule accordingly and made necessary arrangements to maintain continuity during my absence.\r\n</p>\r\n\r\n<p>\r\nIf there are any immediate concerns or follow-ups required, I’ll be happy to address them prior to my leave or as soon as I return.\r\n</p>\r\n\r\n<p>\r\nThank you for your support and understanding.\r\n</p>\r\n\r\n<p>\r\nWarm regards,<br />\r\n{leaveEmployeeName}\r\n</p>";

                    EmailEntity LeaveMail = new EmailEntity
                    {
                        Email = emailList,
                        Subject = leave.GroupId == "0" ? "Leave Notification" : "Leave Edit" + $" from {leaveEmployeeName} ",
                        Body = emailBody
                    };

                    await _commonService.SendEmail(LeaveMail);

                }
                    
                return Json(result);
            }
            return View("Index");
        }


        //Delete Leave
        [HttpPost]
        public async Task<IActionResult> DeleteLeave(string groupId)
        {
            var result = await _webApiHelper.DeleteAsync<dynamic>(_apiHelper.DeleteLeaveApi + $"{groupId}");
            return Json(result);
        }

        // Approve or Reject Leave
        [HttpPost]
        public async Task<IActionResult> ApproveRejectLeave(string groupId, int Status)
           {
            var LoggedEmpCode = HttpContext.Session.GetInt32("authCode");
            var result = await _webApiHelper.DeleteAsync<dynamic>(_apiHelper.ApproveRejectLeaveApi + $"{groupId}/{Status}/{LoggedEmpCode}");

            if (result.Success)
            {
                var leaveData = await _webApiHelper.GetAsync<List<LeaveEntity>>(_apiHelper.GetLeaveByGroupIdApi + $"{groupId}");

                var LeaveEmployeeCode = leaveData.Data[0].EmpCode;

                var childWithParentsList = await _webApiHelper.GetAsync<List<ChildWithParentList>>(_apiHelper.ChildWithParents + $"{LeaveEmployeeCode}");
                var leaveEmployeeName = childWithParentsList.Data[0].EmployeeName;
                var leaveEmployeeEmail = childWithParentsList.Data[0].Email;

                string leaveStatus = Status switch
                {
                    1 => "Pending",
                    2 => "Deleted",
                    3 => "Approved",
                    4 => "Rejected",
                    5 => "Cancelled",
                    _ => "N/A"
                };

               string emailBody = $@"
                                <!DOCTYPE html>
                                <html>
                                <head>
                                    <style>
                                    body {{
                                        font-family: 'Segoe UI', sans-serif;
                                        background-color: #f4f6f8;
                                        margin: 0;
                                        padding: 0;
                                    }}
                                    .email-container {{
                                        background-color: #ffffff;
                                        margin: 40px auto;
                                        padding: 30px;
                                        max-width: 600px;
                                        border-radius: 10px;
                                        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
                                    }}
                                    .header {{
                                        text-align: center;
                                        padding-bottom: 20px;
                                        border-bottom: 1px solid #ddd;
                                    }}
                                    .header h2 {{
                                        margin: 0;
                                        color: #4a90e2;
                                    }}
                                    .status {{
                                        text-align: center;
                                        font-size: 18px;
                                        margin: 20px 0;
                                        font-weight: bold;
                                        color: {(Status == 3 ? "green" : "red")};
                                    }}
                                    .details {{
                                        margin: 20px 0;
                                        line-height: 1.6;
                                    }}
                                    .details span {{
                                        display: inline-block;
                                        min-width: 130px;
                                        font-weight: 600;
                                        color: #333;
                                    }}
                                    .footer {{
                                        margin-top: 30px;
                                        font-size: 14px;
                                        color: #777;
                                        text-align: left;
                                    }}
                                    .footer strong {{
                                        color: #555;
                                    }}
                                    </style>
                                </head>
                                <body>
                                    <div class='email-container'>
                                    <div class='header'>
                                        <h2>Leave Request Update</h2>
                                    </div>
                                    <p>Dear <strong>{leaveEmployeeName}</strong>,</p>

                                    <p>We would like to inform you that your leave request has been:</p>

                                    <div class='status'>{leaveStatus}</div>

                                    <p>If you have any concerns or need further clarification, please reach out to the HR department.</p>

                                    <div class='footer'>
                                        Regards,<br>
                                        <strong>HR Department</strong><br>
                                        Cement Digital Pvt. Ltd.<br>
                                    </div>
                                    </div>
                                </body>
                                </html>
               ";

                EmailEntity LeaveMail = new EmailEntity
                {
                    Email = leaveEmployeeEmail,
                    Subject = "Leave Request Update",
                    Body = emailBody
                };

                await _commonService.SendEmail(LeaveMail);

            }

            return Json(result);
        }

        [HttpGet]
        public async Task<IActionResult> GetLeaveCount(int EmpCode, int Year)
        {
            var leaveCount = await _webApiHelper.GetAsync<List<EmpDropDownList>>(_apiHelper.GetLeaveCountByEmpCodeApi + $"{EmpCode}/{Year}");

            return Json(leaveCount.Data[0]);
        }
    }
}
